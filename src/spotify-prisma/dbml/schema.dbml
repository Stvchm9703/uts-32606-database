//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table Tag {
  id Int [pk, increment]
  code String [unique, not null]
  type String [not null]
  name String [not null]
  AlbumAvailableMarket AlbumAvailableMarket [not null]
  TracksAvailableMarket TracksAvailableMarket [not null]
  ArtistInGenres ArtistInGenres [not null]
}

Table Category {
  id Int [pk, increment]
  hashId String [unique, not null]
  name String [not null]
  icon String [not null]
}

Table User {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  uid String
  name String [not null]
  email String
  authType String [not null, default: 'mail']
  Playlist Playlist [not null]
  type String [not null, default: 'user']
  country String [not null]
  explicitContentFilterEnabled Boolean [not null]
  explicitContentFilterLocked Boolean [not null]
  imagesId String
  product String [not null]
  FollowPlaylists PlaylistOnFollower [not null]
  FollowingArtists ArtistOnFollowing [not null]
}

Table Artist {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  uid String [unique, not null]
  name String [not null]
  popularity Int
  imageUrl String
  Genres ArtistInGenres [not null]
  TrackProduceByArtist TrackProduceByArtist [not null]
  AlbumProduceByArtist AlbumProduceByArtist [not null]
  Followers ArtistOnFollowing [not null]
}

Table Track {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  uid String [unique, not null]
  name String [not null]
  discNumber Int [not null]
  durationMs Int [not null]
  explicit Boolean [not null]
  popularity Int
  previewUrl String
  trackNumber Int [not null]
  isLocal Boolean [not null]
  availableMarkets TracksAvailableMarket [not null]
  Artists TrackProduceByArtist [not null]
  InPlaylist TracksOnPlaylist [not null]
  Album Album
  albumId Int
}

Table Album {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  uid String [unique, not null]
  albumType String [not null]
  totalTracks Int [not null]
  name String [not null]
  releaseDate DateTime [not null]
  releaseDatePrecision String [not null]
  albumGroup String [not null]
  copyrights String
  imageUrl String
  availableMarkets AlbumAvailableMarket [not null]
  Artists AlbumProduceByArtist [not null]
  Tracks Track [not null]
}

Table Playlist {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  uid String
  collaborative Boolean [not null]
  description String [not null]
  name String [not null]
  public Boolean [not null]
  snapshotId String
  primaryColor String
  tracks TracksOnPlaylist [not null]
  tracksIds Int [not null]
  owner User [not null]
  ownerId Int [not null]
  imagesId String
  followers PlaylistOnFollower [not null]
}

Table TracksOnPlaylist {
  playlistId Int [not null]
  Playlist Playlist [not null]
  trackId Int [not null]
  Track Track [not null]

  indexes {
    (playlistId, trackId) [pk]
  }
}

Table TracksAvailableMarket {
  tagId Int [not null]
  Tag Tag [not null]
  trackId Int [not null]
  Track Track [not null]

  indexes {
    (trackId, tagId) [pk]
  }
}

Table TrackProduceByArtist {
  trackId Int [not null]
  Track Track [not null]
  artistId Int [not null]
  Artists Artist [not null]

  indexes {
    (trackId, artistId) [pk]
  }
}

Table PlaylistOnFollower {
  playlistId Int [not null]
  Playlist Playlist [not null]
  userId Int [not null]
  User User [not null]

  indexes {
    (playlistId, userId) [pk]
  }
}

Table AlbumProduceByArtist {
  albumId Int [not null]
  Album Album [not null]
  artistId Int [not null]
  Artist Artist [not null]

  indexes {
    (albumId, artistId) [pk]
  }
}

Table AlbumAvailableMarket {
  albumId Int [not null]
  Album Album [not null]
  tagId Int [not null]
  Tag Tag [not null]

  indexes {
    (albumId, tagId) [pk]
  }
}

Table ArtistInGenres {
  Artist Artist [not null]
  artistId Int [not null]
  Tag Tag [not null]
  tagId Int [not null]

  indexes {
    (artistId, tagId) [pk]
  }
}

Table ArtistOnFollowing {
  Artist Artist [not null]
  User User [not null]
  artistId Int [not null]
  userId Int [not null]

  indexes {
    (userId, artistId) [pk]
  }
}

Ref: Track.albumId > Album.id

Ref: Playlist.ownerId > User.id

Ref: TracksOnPlaylist.playlistId > Playlist.id

Ref: TracksOnPlaylist.trackId > Track.id

Ref: TracksAvailableMarket.tagId > Tag.id

Ref: TracksAvailableMarket.trackId > Track.id

Ref: TrackProduceByArtist.trackId > Track.id

Ref: TrackProduceByArtist.artistId > Artist.id

Ref: PlaylistOnFollower.playlistId > Playlist.id

Ref: PlaylistOnFollower.userId > User.id

Ref: AlbumProduceByArtist.albumId > Album.id

Ref: AlbumProduceByArtist.artistId > Artist.id

Ref: AlbumAvailableMarket.albumId > Album.id

Ref: AlbumAvailableMarket.tagId > Tag.id

Ref: ArtistInGenres.artistId > Artist.id

Ref: ArtistInGenres.tagId > Tag.id

Ref: ArtistOnFollowing.artistId > Artist.id

Ref: ArtistOnFollowing.userId > User.id